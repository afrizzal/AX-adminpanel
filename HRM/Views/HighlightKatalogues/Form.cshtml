@model HRM.Models.HighlightKatalogues

@{
    ViewBag.Title = "Highlight Katalogue";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<section class="content-header">
    <h1>Form Highlight Katalogue</h1>
</section>

<section class="content">
    <div class="row">
        <div class="col-md-12">
            <div class="box box-primary form-horizontal">
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()
                    // BAGIAN HEADER
                    <div class="box-header">
                        <h3 class="box-title"><b>Form Highlight Katalogue</b></h3>
                    </div>
                    <div class="box-body">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @*@Html.HiddenFor(model => model.cmpcode)*@
                        @Html.HiddenFor(model => model.ID)
                        @*@Html.HiddenFor(model => model.currres2)
                            @Html.HiddenFor(model => model.currres3)*@
                        @Html.Hidden("action")
                        <div class="container-fluid">
                            <div class="form-group">
                                <label class="col-md-2 control-label text-red">@(ViewBag.action)</label>
                            </div>
      @*<div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    <label class="col-md-4 control-label">Code<label class="text-red">*</label></label>
                    <div class="col-md-4">


                        @{
                            if (ViewBag.action == "Update Data")
                            {
                                @Html.EditorFor(model => model.currencycode, new { htmlAttributes = new { @class = "form-control", @type = "text", @readonly="" } })
                            }
                            else
                            {

                                @Html.EditorFor(model => model.currencycode, new { htmlAttributes = new { @class = "form-control", @type = "text",@maxlength=10 } })
                            }
                        }
                        @Html.ValidationMessageFor(model => model.currencycode, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>*@
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="col-md-4 control-label">Title</label>
                                        <div class="col-md-4">
                                            @Html.EditorFor(model => model.TITLE, new { htmlAttributes = new { @class = "form-control", @type = "text", @style = "width:300px" } })
                                            @*@Html.ValidationMessageFor(model => model.currencydesc, "", new { @class = "text-danger" })*@
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="col-md-4 control-label">Subtitle</label>
                                        <div class="col-md-4">
                                            @Html.EditorFor(model => model.SUBTITLE, new { htmlAttributes = new { @class = "form-control", @type = "text", @style = "width:700px" } })
                                            @*@Html.ValidationMessageFor(model => model.currencysymbol, "", new { @class = "text-danger" })*@
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    @{
                                        var src = Html.DisplayFor(m => m.IMAGE_COVER).ToString();
                                        if (!File.Exists(Server.MapPath(src)))
                                        {
                                            src = "~/Content/dist/img/preview.png";
                                        }
                                    }
                                    <img id="fuLocation-preview" alt="your image" src="@Url.Content(src)" style="max-width:200px; max-height:200px;">
                                </div>
                            </div>
                            <div class="row" id="showhidepict">
                                <div class="col-md-6">
                                    <label class="col-sm-4 control-label">IMAGE Cover</label>
                                    <div class="col-lg-8">
                                        <input type="file" class="form-control" onchange="previewlocimage(this);" id="fuLocation" accept=".jpg, .png, .jpeg, .gif, .bmp " style="padding-top:5px;padding-left:5px;">
                                        @Html.HiddenFor(model => model.IMAGE_COVER)
                                        @Html.ValidationMessageFor(model => model.IMAGE_COVER, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            @*<div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    <label class="col-md-4 control-label">Status</label>
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.ISENABLE, new List<SelectListItem>
                        {
                       new SelectListItem { Text="True", Value="True" },
                       new SelectListItem { Text="False", Value="False" }
                        }, new { @class = "form-control" })
                    </div>
                </div>
            </div>
        </div>*@
                            @*<div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    <label class="col-md-4 control-label">Status</label>
                    <div class="col-md-4">
                        @Html.DropDownListFor(m => m.activeflag, new List<SelectListItem>
                        {
                             new SelectListItem { Text="ACTIVE", Value="ACTIVE" },
                             new SelectListItem { Text="INACTIVE", Value="INACTIVE" }
                        }, new { @class = "form-control" })
                    </div>
                </div>
            </div>
        </div>*@
                        </div>
                    </div>

                    // USER & TOMBOL ACTION
                    <div class="box-footer">
                        <div class="pull-left">
                            created On @(Html.DisplayFor(m => m.CREATED_AT))
                            @{
                                if (ViewBag.action == "Update Data")
                                {
                                    <br />
                                    @:Last Updated On @(Html.DisplayFor(m => m.UPDATED_AT))
                                }
                            }
                        </div>
                        <div class="pull-right">

                            <button type="submit" class="btn btn-success btn-md"><b>Save</b></button>
                            <a href="@Url.Action("Index")" type="button" class="btn btn-default btn-md"><b>Cancel</b></a>
                            @{
                                if (ViewBag.action == "Update Data")
                                {
                                    <button type="button" class="btn btn-danger btn-md" id="btnDelete"><b>Delete</b></button>
                                }
                            }



                        </div>
                    </div>

                    // AKHIR USER & TOMBOL ACTION
                }
            </div>
        </div>
    </div>


</section>

<script src="~/Scripts/jquery-3.1.1.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script src="~/Scripts/tinymce/tinymce.min.js"></script>

<script script type="text/javascript">
    tinymce.init({
        selector: '#SUBTITLE'
    });
</script>

<script language="javascript" type="text/javascript">

        function previewlocimage(input) {
        if (input.files && input.files[0]) {
            var reader = new FileReader();

            reader.onload = function (e) {
                $("#fuLocation-preview")
                    .attr('src', e.target.result);
            };

            reader.readAsDataURL(input.files[0]);
        }
    }

    $("#fuLocation").on('change', function (e) {
        var url = "@(Url.Action("UploadFile"))";
        var files = e.target.files;

        if (files.length > 0) {
            if (window.FormData !== undefined) {
                var data = new FormData();
                for (var x = 0; x < files.length; x++) {
                    data.append("file" + x, files[x]);
                }

                $.ajax({
                    type: "POST",
                    url: url,
                    contentType: false,
                    processData: false,
                    data: data,
                    success: function (data) {
                        console.log(data);
                        if (data.result == "sukses") {
                            $("#IMAGE_COVER").val(data.idimgpath);

                        }
                    },
                    error: function (err) {
                        console.log(err);
                    }
                });
            } else {
                alert("This browser doesn't support HTML5 file uploads!");
            }
        }
    });
    $("#btnDelete").click(function () {
        var oid = $("#ID").val();
        var token = $('input[name="__RequestVerificationToken"]').val()
        Swal({
            title: 'Are you sure to DELETE this data?',
            text: "Deleted data can't be returned!",
            type: 'warning',
            showCancelButton: true,
            confirmButtonClass: 'btn btn-success',
            cancelButtonClass: 'btn btn-danger',
            confirmButtonText: 'Yes, Delete this data!'
        }).then((result) => {
            if (result.value) {
                $.ajax({
                    type: "POST",
                    url: "@(Url.Action("Delete"))",
                    data: { __RequestVerificationToken: token, id: oid },
                    success: function (data) {
                        if (data.result == 'success') {
                            Swal(
                                'Deleted!',
                                'Data has been deleted!',
                                'success'
                                )
                            setTimeout(function () {
                                location.replace("@(Url.Action("Index"))");
                            }, 1000);
                        } else {
                            Swal(
                                'Delete data failed!',
                                data.msg,
                                'warning'
                                )
                        }
                    },
                    error: function (error) {
                        console.dir(error)
                    }
                });
            }
        })
    });
</script>