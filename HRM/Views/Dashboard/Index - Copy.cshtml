@{
    ViewBag.Title = "Dashboard";
    Layout = "~/Views/Shared/_Layout.cshtml";
    string UserID = ((Session["UserID"] == null) ? "-" : Session["UserID"].ToString());
}

<section class="content-header">
    <h1>Dashboard</h1>
</section>

<section class="content">
    <div class="row">
        <div id="DbShipment" class="col-md-12" style="display: none;">
            <div class="box box-info">
                <div class="box-header with-border">
                    <h3 class="box-title">Total A/R Finish Good</h3>
                    <div class="box-tools pull-right">
                        <button id="btnRefreshDbShipment" type="button" class="btn btn-box-tool"><i class="fa fa-refresh"></i></button>
                        <button type="button" class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-minus"></i></button>
                        <button type="button" class="btn btn-box-tool" data-widget="remove"><i class="fa fa-times"></i></button>
                    </div>
                </div>
                <div class="box-body">
                    <div class="row">
                        <div class="col-md-12">
                            <div class="chart">
                                <canvas id="ChartShipment" style="height:500px"></canvas>
                            </div>
                        </div>
                        @*<div class="col-md-2">
                            <ul class="chart-legend clearfix">
                                <li><i class="fa fa-circle text-green"></i> HPS</li>
                                <li><i class="fa fa-circle text-light-blue"></i> PO</li>
                            </ul>
                        </div>*@
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div id="DbAvgInventRM" class="col-md-6" style="display: none;">
            <div class="box box-info">
                <div class="box-header with-border">
                    <h3 class="box-title">Average Inventory Days Outstanding (Raw Material Non Kayu)</h3>
                    <div class="box-tools pull-right">
                        <button id="btnRefreshDbAvgInventRM" type="button" class="btn btn-box-tool"><i class="fa fa-refresh"></i></button>
                        <button type="button" class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-minus"></i></button>
                        <button type="button" class="btn btn-box-tool" data-widget="remove"><i class="fa fa-times"></i></button>
                    </div>
                </div>
                <div class="box-body">
                    <div class="row">
                        <div class="col-md-3">
                            <div class="form-group">
                                <label class="col-md control-label" style="max-width:100px">Period</label>
                                <div class="col-md">
                                    @Html.DropDownList("FilterYearAvgInventRM", null, new { @class = "form-control select2" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label class="col-md control-label" style="max-width:100px">Business Unit</label>
                                <div class="col-md">
                                    @Html.DropDownList("FilterBUAvgInventRM", null, new { @class = "form-control select2" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <label class="col-md control-label" style="max-width:100px">&nbsp;&nbsp;&nbsp;</label>
                            <div class="col-md">
                                <button type="button" id="btnShowDataAvgInventRM" class="btn btn-primary btn-md"><b>Show Data</b></button>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-10">
                            <div class="chart">
                                <canvas id="ChartAvgInventRM" style="height:300px"></canvas>
                            </div>
                        </div>
                        <div class="col-md-2">
                            <ul class="chart-legend clearfix">
                                <li><i class="fa fa-circle text-green"></i> End of Month Balance</li>
                                <li><i class="fa fa-circle text-light-blue"></i> Daily Usage Average</li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div id="DbAvgInventKY" class="col-md-6" style="display: none;">
            <div class="box box-info">
                <div class="box-header with-border">
                    <h3 class="box-title">Average Inventory Days Outstanding (Raw Material Kayu)</h3>
                    <div class="box-tools pull-right">
                        <button id="btnRefreshDbAvgInventKY" type="button" class="btn btn-box-tool"><i class="fa fa-refresh"></i></button>
                        <button type="button" class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-minus"></i></button>
                        <button type="button" class="btn btn-box-tool" data-widget="remove"><i class="fa fa-times"></i></button>
                    </div>
                </div>
                <div class="box-body">
                    <div class="row">
                        <div class="col-md-3">
                            <div class="form-group">
                                <label class="col-md control-label" style="max-width:100px">Period</label>
                                <div class="col-md">
                                    @Html.DropDownList("FilterYearAvgInventKY", null, new { @class = "form-control select2" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label class="col-md control-label" style="max-width:100px">Business Unit</label>
                                <div class="col-md">
                                    @Html.DropDownList("FilterBUAvgInventKY", null, new { @class = "form-control select2" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <label class="col-md control-label" style="max-width:100px">&nbsp;&nbsp;&nbsp;</label>
                            <div class="col-md">
                                <button type="button" id="btnShowDataAvgInventKY" class="btn btn-primary btn-md"><b>Show Data</b></button>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-10">
                            <div class="chart">
                                <canvas id="ChartAvgInventKY" style="height:300px"></canvas>
                            </div>
                        </div>
                        <div class="col-md-2">
                            <ul class="chart-legend clearfix">
                                <li><i class="fa fa-circle text-green"></i> End of Month Balance</li>
                                <li><i class="fa fa-circle text-light-blue"></i> Daily Usage Average</li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div id="DbProduction" class="col-md-12" style="display: none;">
            <div class="box box-info">
                <div class="box-header with-border">
                    <h3 class="box-title">Production Progress</h3>
                    <div class="box-tools pull-right">
                        <button id="btnRefreshDbProduction" type="button" class="btn btn-box-tool"><i class="fa fa-refresh"></i></button>
                        <button type="button" class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-minus"></i></button>
                        <button type="button" class="btn btn-box-tool" data-widget="remove"><i class="fa fa-times"></i></button>
                    </div>
                </div>
                <div class="box-body">
                    <div class="row">
                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="col-md control-label" style="max-width:100px">Period</label>
                                <div class="col-md">
                                    <div class="input-group">
                                        @Html.Editor("StartPeriod", new { htmlAttributes = new { @class = "form-control datepicker datemask2", @type = "text" } })
                                        <span class="input-group-addon">
                                            <i class="fa fa-calendar"></i>
                                        </span>
                                        <span class="input-group-addon no-border">
                                            -
                                        </span>
                                        @Html.Editor("EndPeriod", new { htmlAttributes = new { @class = "form-control datepicker datemask2", @type = "text" } })
                                        <span class="input-group-addon">
                                            <i class="fa fa-calendar"></i>
                                        </span>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label class="col-md control-label" style="max-width:100px">Business Unit</label>
                                <div class="col-md">
                                    @Html.DropDownList("BusinessUnit", null, new { @class = "form-control select2" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-2">
                            <label class="col-md control-label" style="max-width:100px">&nbsp;&nbsp;&nbsp;</label>
                            <div class="col-md">
                                <button type="button" id="btnShowData" class="btn btn-primary btn-md"><b>Show Data</b></button>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-4">
                            <h4 class="box-title">Total KIK</h4>
                            <div class="chart">
                                <canvas id="ChartProdTotalKIK" style="height:200px"></canvas>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <h4 class="box-title">Production Duration</h4>
                            <div class="chart">
                                <canvas id="ChartProdDuration" style="height:200px"></canvas>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <h4 class="box-title">Production Progress</h4>
                            <div class="chart-responsive">
                                <canvas id="ChartProdProgress" style="height:150px"></canvas>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<script src="~/Scripts/jquery-3.1.1.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

<script type="text/javascript">
    var chartOptions = {
        scaleBeginAtZero: true,//Boolean - Whether the scale should start at zero, or an order of magnitude down from the lowest value
        scaleShowGridLines: true,//Boolean - Whether grid lines are shown across the chart
        scaleGridLineColor: 'rgba(0,0,0,.05)',//String - Colour of the grid lines
        scaleGridLineWidth: 1,//Number - Width of the grid lines
        scaleShowHorizontalLines: true,//Boolean - Whether to show horizontal lines (except X axis)
        scaleShowVerticalLines: true,//Boolean - Whether to show vertical lines (except Y axis)
        barShowStroke: true,//Boolean - If there is a stroke on each bar
        barStrokeWidth: 2,//Number - Pixel width of the bar stroke
        barValueSpacing: 5,//Number - Spacing between each of the X value sets
        barDatasetSpacing: 1,//Number - Spacing between data sets within X values
        legendTemplate: '<ul class="<%=name.toLowerCase()%>-legend"><% for (var i=0; i<datasets.length; i++){%><li><span style="background-color:<%=datasets[i].fillColor%>"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>',//String - A legend template
        //formatNumber
        //tooltipTemplate: "<%= addCommas(value)%>",
        //Boolean - whether to make the chart responsive
        responsive: true,
        maintainAspectRatio: true,
        datasetFill: false
    };

    var pieOptions = {
        segmentShowStroke: true,// Boolean - Whether we should show a stroke on each segment
        segmentStrokeColor: '#fff',// String - The colour of each segment stroke
        segmentStrokeWidth: 1,// Number - The width of each segment stroke
        percentageInnerCutout: 0, // This is 0 for Pie charts// Number - The percentage of the chart that we cut out of the middle
        animationSteps: 100,// Number - Amount of animation steps
        //animationEasing: 'easeOutBounce',// String - Animation easing effect
        animateRotate: false,// Boolean - Whether we animate the rotation of the Doughnut
        animateScale: true,// Boolean - Whether we animate scaling the Doughnut from the centre
        responsive: true,// Boolean - whether to make the chart responsive to window resizing
        maintainAspectRatio: false,// Boolean - whether to maintain the starting aspect ratio or not when responsive, if set to false, will take up entire container
        legendTemplate: '<ul class=\'<%=name.toLowerCase()%>-legend\'><% for (var i=0; i<segments.length; i++){%><li><span style=\'background-color:<%=segments[i].fillColor%>\'></span><%if(segments[i].label){%><%=segments[i].label%><%}%></li><%}%></ul>',// String - A legend template
        tooltipTemplate: '<%=value %> <%=label%>'// String - A tooltip template
    };

    function ShowDashboardShipment() {
        $("#DbShipment").show();
        var ShipmentCanvas = $('#ChartShipment').get(0).getContext('2d');
        var ShipmentChart = new Chart(ShipmentCanvas);
        var ShipmentChartData = {
            labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],
            datasets: [
                {
                    label: 'HPS',
                    fillColor: '#00a65a',
                    strokeColor: '#00a65a',
                    pointColor: '#00a65a',
                    pointStrokeColor: '#c1c7d1',
                    pointHighlightFill: '#fff',
                    pointHighlightStroke: 'rgba(220,220,220,1)',
                    data: [65, 59, 80, 81, 56, 55, 40]
                }]
        };
        ShipmentChartData.labels.splice(0, ShipmentChartData.labels.length);
        ShipmentChartData.datasets[0].data.splice(0, ShipmentChartData.datasets[0].data.length);
        $("#btnRefreshDbShipment i").removeClass("fa-search");
        $("#btnRefreshDbShipment i").addClass("fa-spinner fa-spin");
        $.getJSON("@(Url.Action("GetDataDashboardShipment"))", function (data) {
            var i = 0;
            $.each(data, function (key, val) {
                ShipmentChartData.labels.splice(i, 1, val.divname);
                ShipmentChartData.datasets[0].data.splice(i, 1, val.totalshipment);
                i++;
            });
            ShipmentChart.Bar(ShipmentChartData, chartOptions);
            setTimeout(function () {
                $("#btnRefreshDbShipment i").removeClass("fa-spinner fa-spin");
                $("#btnRefreshDbShipment i").addClass("fa-search");
            }, 100);
        });
    }

    var ChartProdTotalKIK = {
        labels: [],
        datasets: [
            {
                label: 'KIK',
                fillColor: '#00a65a',
                strokeColor: '#00a65a',
                pointColor: '#00a65a',
                pointStrokeColor: '#c1c7d1',
                pointHighlightFill: '#fff',
                pointHighlightStroke: 'rgba(220,220,220,1)',
                data: []
            }]
    };

    var ChartProdDuration = {
        labels: [],
        datasets: [
            {
                label: 'KIK',
                fillColor: '#00a65a',
                strokeColor: '#00a65a',
                pointColor: '#00a65a',
                pointStrokeColor: '#c1c7d1',
                pointHighlightFill: '#fff',
                pointHighlightStroke: 'rgba(220,220,220,1)',
                data: []
            }]
    };

    var ChartProdProgress = [
        {
            value: 70,
            color: '#f56954',
            highlight: '#f56954',
            label: 'Unclosed'
        },
        {
            value: 30,
            color: '#00a65a',
            highlight: '#00a65a',
            label: 'Closed'
        }];

    function ShowDashboardProduction() {
        $("#DbProduction").show();
        var StartPeriod = $('#StartPeriod').val();
        var EndPeriod = $('#EndPeriod').val();
        var BusinessUnit = $('#BusinessUnit option:selected').val();

        ChartProdTotalKIK.labels.splice(0, ChartProdTotalKIK.labels.length);
        ChartProdTotalKIK.datasets[0].data.splice(0, ChartProdTotalKIK.datasets[0].data.length);
        ChartProdDuration.labels.splice(0, ChartProdDuration.labels.length);
        ChartProdDuration.datasets[0].data.splice(0, ChartProdDuration.datasets[0].data.length);
        ChartProdProgress[0].value = 0;
        ChartProdProgress[1].value = 0;

        $("#btnRefreshDbProduction i").removeClass("fa-search");
        $("#btnRefreshDbProduction i").addClass("fa-spinner fa-spin");

        $.getJSON("@(Url.Action("GetDataDashboardProduction"))", { StartPeriod: StartPeriod, EndPeriod: EndPeriod, BusinessUnit: BusinessUnit }, function (data) {
            var i = 0;
            var markup = "";

            $.each(data.datatotalkik, function (key, val) {
                ChartProdTotalKIK.labels.splice(i, 1, val.statuskik);
                ChartProdTotalKIK.datasets[0].data.splice(i, 1, val.totalkik);
                i++;
            });

            i = 0;
            $.each(data.dataduration, function (key, val) {
                ChartProdDuration.labels.splice(i, 1, val.dayrange);
                ChartProdDuration.datasets[0].data.splice(i, 1, val.totalkik);
                i++;
            });
            ChartProdDuration.datasets[0].label = 'days'

            $.each(data.dataprogress, function (key, val) {
                ChartProdProgress[0].value = val.unclosedkik;
                ChartProdProgress[1].value = val.closedkik;
            });

            setTimeout(function () {
                var $divcanvas = $('#ChartProdTotalKIK').parent();
                var $divcanvas2 = $('#ChartProdDuration').parent();
                var $divcanvas3 = $('#ChartProdProgress').parent();
                $divcanvas.html('<canvas id="CanvasProdTotalKIK" style="height:200px"></canvas>');
                $divcanvas2.html('<canvas id="CanvasProdDuration" style="height:200px"></canvas>');
                $divcanvas3.html('<canvas id="CanvasProdProgress" style="height:200px"></canvas>');
                var canvasWL = $('#CanvasProdTotalKIK').get(0).getContext('2d');
                var chartWL = new Chart(canvasWL);
                var canvasWL2 = $('#CanvasProdDuration').get(0).getContext('2d');
                var chartWL2 = new Chart(canvasWL2);
                var canvasWL3 = $('#CanvasProdProgress').get(0).getContext('2d');
                var chartWL3 = new Chart(canvasWL3);

                chartWL.Bar(ChartProdTotalKIK, chartOptions);
                chartWL2.Bar(ChartProdDuration, chartOptions);
                chartWL3.Doughnut(ChartProdProgress, pieOptions);

                $("#btnRefreshDbProduction i").removeClass("fa-spinner fa-spin");
                $("#btnRefreshDbProduction i").addClass("fa-search");
            }, 100);
        });
    }

    function ShowDashboardAvgInventRM() {
        $("#DbAvgInventRM").show();
        var AvgInventRMCanvas = $('#ChartAvgInventRM').get(0).getContext('2d');
        var AvgInventRMChart = new Chart(AvgInventRMCanvas);
        var AvgInventRMChartData = {
            labels: ['JAN', 'FEB', 'MAR', 'APR', 'MAY', 'JUN', 'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC'],
            datasets: [
                {
                    label: 'Balance',
                    fillColor: '#00a65a',
                    strokeColor: '#00a65a',
                    pointColor: '#00a65a',
                    pointStrokeColor: '#c1c7d1',
                    pointHighlightFill: '#fff',
                    pointHighlightStroke: 'rgba(0,166,90,1)',
                    data: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
                },
                {
                    label: 'Usage',
                    fillColor: '#3c8dbc',
                    strokeColor: '#3c8dbc',
                    pointColor: '#3c8dbc',
                    pointStrokeColor: '#c1c7d1',
                    pointHighlightFill: '#fff',
                    pointHighlightStroke: 'rgba(60,141,188,1)',
                    data: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
                }]
        };
        AvgInventRMChartData.labels.splice(0, AvgInventRMChartData.labels.length);
        AvgInventRMChartData.datasets[0].data.splice(0, AvgInventRMChartData.datasets[0].data.length);
        AvgInventRMChartData.datasets[1].data.splice(0, AvgInventRMChartData.datasets[1].data.length);
        $("#btnRefreshDbAvgInventRM i").removeClass("fa-search");
        $("#btnRefreshDbAvgInventRM i").addClass("fa-spinner fa-spin");
        var FilterBusUnit = $('#FilterBUAvgInventRM option:selected').val();
        var FilterYear = $('#FilterYearAvgInventRM option:selected').val();
        $.getJSON("@(Url.Action("GetDataDashboardAvgInventory_RM"))", { FilterBusUnit: FilterBusUnit, FilterYear: FilterYear }, function (data) {
            var i = 0;
            $.each(data, function (key, val) {
                AvgInventRMChartData.labels.splice(i, 1, val.periodmonth);
                AvgInventRMChartData.datasets[0].data.splice(i, 1, val.amount);
                AvgInventRMChartData.datasets[1].data.splice(i, 1, val.amount_usg);
                i++;
            });
            AvgInventRMChart.Bar(AvgInventRMChartData, chartOptions);
            setTimeout(function () {
                $("#btnRefreshDbAvgInventRM i").removeClass("fa-spinner fa-spin");
                $("#btnRefreshDbAvgInventRM i").addClass("fa-search");
            }, 100);
        });
    }

    function ShowDashboardAvgInventKY() {
        $("#DbAvgInventKY").show();
        var AvgInventKYCanvas = $('#ChartAvgInventKY').get(0).getContext('2d');
        var AvgInventKYChart = new Chart(AvgInventKYCanvas);
        var AvgInventKYChartData = {
            labels: ['JAN', 'FEB', 'MAR', 'APR', 'MAY', 'JUN', 'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC'],
            datasets: [
                {
                    label: 'Balance',
                    fillColor: '#00a65a',
                    strokeColor: '#00a65a',
                    pointColor: '#00a65a',
                    pointStrokeColor: '#c1c7d1',
                    pointHighlightFill: '#fff',
                    pointHighlightStroke: 'rgba(0,166,90,1)',
                    data: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
                },
                {
                    label: 'Usage',
                    fillColor: '#3c8dbc',
                    strokeColor: '#3c8dbc',
                    pointColor: '#3c8dbc',
                    pointStrokeColor: '#c1c7d1',
                    pointHighlightFill: '#fff',
                    pointHighlightStroke: 'rgba(60,141,188,1)',
                    data: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
                }]
        };
        AvgInventKYChartData.labels.splice(0, AvgInventKYChartData.labels.length);
        AvgInventKYChartData.datasets[0].data.splice(0, AvgInventKYChartData.datasets[0].data.length);
        AvgInventKYChartData.datasets[1].data.splice(0, AvgInventKYChartData.datasets[1].data.length);
        $("#btnRefreshDbAvgInventKY i").removeClass("fa-search");
        $("#btnRefreshDbAvgInventKY i").addClass("fa-spinner fa-spin");
        var FilterBusUnit = $('#FilterBUAvgInventKY option:selected').val();
        var FilterYear = $('#FilterYearAvgInventKY option:selected').val();
        $.getJSON("@(Url.Action("GetDataDashboardAvgInventory_KY"))", { FilterBusUnit: FilterBusUnit, FilterYear: FilterYear }, function (data) {
            var i = 0;
            $.each(data, function (key, val) {
                AvgInventKYChartData.labels.splice(i, 1, val.periodmonth);
                AvgInventKYChartData.datasets[0].data.splice(i, 1, val.amount);
                AvgInventKYChartData.datasets[1].data.splice(i, 1, val.amount_usg);
                i++;
            });
            AvgInventKYChart.Bar(AvgInventKYChartData, chartOptions);
            setTimeout(function () {
                $("#btnRefreshDbAvgInventKY i").removeClass("fa-spinner fa-spin");
                $("#btnRefreshDbAvgInventKY i").addClass("fa-search");
            }, 100);
        });
    }

    $(document).ready(function () {
        //ShowDashboardShipment();
        //ShowDashboardProduction();
        ShowDashboardAvgInventRM();
        ShowDashboardAvgInventKY();
    });

    $("#btnRefreshDbShipment").click(function () {
        ShowDashboardShipment();
    });

    $("#btnShowData").click(function () {
        ShowDashboardProduction();
    });

    $("#btnRefreshDbProduction").click(function () {
        ShowDashboardProduction();
    });

    $("#btnRefreshDbAvgInventRM").click(function () {
        ShowDashboardAvgInventRM();
    });

    $("#btnShowDataAvgInventRM").click(function () {
        ShowDashboardAvgInventRM();
    });

    $("#btnRefreshDbAvgInventKY").click(function () {
        ShowDashboardAvgInventKY();
    });

    $("#btnShowDataAvgInventKY").click(function () {
        ShowDashboardAvgInventKY();
    });
</script>